name: Build & (optional) Pages deploy

on:
  push:
    branches: ["**"]
  pull_request:

# Needed for Pages deploy; safe for normal builds too.
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: docs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_docs:
    runs-on: ubuntu-latest
    container:
      image: asciidoctor/docker-asciidoctor:1.84
    steps:
      - uses: actions/checkout@v4

      - name: Cache asciidoctor-diagram outputs
        uses: actions/cache@v4
        with:
          path: .asciidoctor/diagram
          key: diagram-${{ hashFiles('doc/**/*.adoc') }}
          restore-keys: diagram-

      - name: Build HTML & PDF
        run: |
          set -euo pipefail
          # HTML -> public/
          asciidoctor \
            -a data-uri -a toc=left -a sectnums -a reproducible -a icons=font \
            -a source-highlighter=Pygments -a experimental \
            -r asciidoctor-diagram \
            -a imagesdir=images -a imagesoutdir=.asciidoctor/diagram \
            -a diagram-cachedir=.asciidoctor/diagram \
            -D public -R doc "**/*.adoc"

          # PDF -> build/pdf/*.pdf and copy into public/pdf
          mkdir -p build/pdf public/pdf
          asciidoctor-pdf \
            -r asciidoctor-diagram \
            -a imagesdir=images -a imagesoutdir=.asciidoctor/diagram \
            -a diagram-cachedir=.asciidoctor/diagram \
            -D build/pdf -R doc "**/*.adoc" || true
          cp -a build/pdf/*.pdf public/pdf/ || true

      - name: Prepare _site (flatten so index.html is at root)
        run: |
          rm -rf _site
          mkdir -p _site
          cp -a public/. _site/      # puts index.html at _site/
          # (optional) keep PDFs also at /pdf
          mkdir -p _site/pdf
          cp -a build/pdf/*.pdf _site/pdf/ || true

      - name: List _site (debug)
        run: ls -la _site | sed -n '1,120p'

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: _site
          if-no-files-found: error

  deploy_pages:
    needs: build_docs
    if: github.event_name == 'push' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    runs-on: ubuntu-latest
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: _site

      - name: List _site (debug)
        run: ls -la _site | sed -n '1,120p'

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

      - name: Deploy
        id: deploy
        uses: actions/deploy-pages@v4
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}